#!/bin/bash

### Create pre-commit symlink if unset ###
GITDIR="";
if [ -d .git ]; then
  GITDIR=".git";
elif [ -f .git ]; then
  GITDIR=$(sed -n '/^gitdir:/{ s|.*: ||; p; }' .git);
fi
if [ ! -d "$GITDIR" ]; then
  echo "${0##*/}: error: unable to find git directory" 1>&2;
  exit 1;
fi
if [ ! -h "$GITDIR/hooks/pre-commit" ]; then
  if [ $(realpath --help 2>&1 | grep -c relative) != 0 ]; then
    HOOK=$(realpath --relative-to="$GITDIR/hooks" ./githook-pre-commit);
  else
    HOOK=$(readlink -f ./githook-pre-commit);
  fi
  ln -fs "$HOOK" "$GITDIR/hooks/pre-commit";
  echo "${0##*/}: creating git pre-commit hook symlink" 1>&2;
  exit 1;
fi


### Update versions on files ###
FILES=( $(git status --porcelain | sed 's| .* | |' | grep '^[MR]') );
V=$(date -u +%Y.%m.%d);

NEWVER="no";
N="${#FILES[@]}";

check_change_after_staged () {
  [ "${2:1:1}" = "M" ] &&
    echo "${0##*/}: error: unable to update version due to change after staged: $1" 1>&2 &&
    exit 1;
}

n=1;
while [ "$n" -lt "${#FILES[@]}" ]; do
  case "${FILES[$n]}" in
    tesseract-recognize.cc )
      NEWVER="yes";
      N="$n";
      ;;
    *.cc | *.h )
      NEWVER="yes";
      ;;
  esac
  n=$((n+2));
done

if [ "$NEWVER" = "yes" ]; then
  FILES[$N]="tesseract-recognize.cc";
  check_change_after_staged "${FILES[$N]}" "${FILES[$((N+1))]}";
  echo "${0##*/}: updating version of ${FILES[$N]}" 1>&2;
  sed -i 's|$Version:[^$]*\$|$Version: '"$V"'$|' "${FILES[$N]}";
  git add "${FILES[$N]}";
fi

exit 0;
